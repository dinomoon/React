"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = require("./component");
var react_1 = __importStar(require("react"));
exports.UseGuard = function (rule) { return function (WrappedComponent) {
    return /** @class */ (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.render = function () {
            return react_1.default.createElement(component_1.PureGuard, { children: react_1.default.createElement(WrappedComponent, null), rule: rule });
        };
        return class_1;
    }(react_1.PureComponent));
}; };
var GuardClass = /** @class */ (function () {
    function GuardClass() {
    }
    GuardClass.prototype.handle = function () {
        throw new Error('Handle() has not been configured');
    };
    return GuardClass;
}());
exports.GuardClass = GuardClass;
exports.AddGuard = function (rule) { return function (WrappedClass) {
    var classInstance = new WrappedClass();
    component_1.PureGuard.addGuard(rule, classInstance.handle);
}; };
//# sourceMappingURL=decorator.js.map