"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var component_1 = require("./component");
var decorator_1 = require("./decorator");
var util_1 = require("../util");
describe('PureRouter Decorators', function () {
    beforeEach(function () { return component_1.PureRouter.reset; });
    describe('Get', function () {
        it('will update PureRouter', function () {
            var TestComponent = /** @class */ (function (_super) {
                __extends(TestComponent, _super);
                function TestComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TestComponent = __decorate([
                    decorator_1.Get('test')
                ], TestComponent);
                return TestComponent;
            }(util_1.MockClassComponent));
            expect(component_1.PureRouter.routes.find(function (x) { return x.path === '/test'; })).toEqual({
                path: '/test',
                children: react_1.default.createElement(TestComponent, null),
            });
        });
        // Testing the type along the TS compiler is fine enough here
        it('will allow a class component with custom prop types', function () {
            var TestComponent = /** @class */ (function (_super) {
                __extends(TestComponent, _super);
                function TestComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TestComponent = __decorate([
                    decorator_1.Get('test/custom')
                ], TestComponent);
                return TestComponent;
            }(util_1.CustomMockClassComponent));
            expect(true).toBeTruthy();
        });
    });
    describe('NotFound', function () {
        it('will update PureRouter', function () {
            var TestComponent = /** @class */ (function (_super) {
                __extends(TestComponent, _super);
                function TestComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TestComponent = __decorate([
                    decorator_1.NotFound
                ], TestComponent);
                return TestComponent;
            }(util_1.MockClassComponent));
            expect(component_1.PureRouter.notFound).toEqual(react_1.default.createElement(TestComponent, null));
        });
    });
    describe('NotAllowed', function () {
        it('will update PureRouter', function () {
            var TestComponent = /** @class */ (function (_super) {
                __extends(TestComponent, _super);
                function TestComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TestComponent = __decorate([
                    decorator_1.NotAllowed
                ], TestComponent);
                return TestComponent;
            }(util_1.MockClassComponent));
            expect(component_1.PureRouter.notAllowed).toEqual(react_1.default.createElement(TestComponent, null));
        });
    });
    describe('Server Error', function () {
        it('will update PureRouter', function () {
            var TestComponent = /** @class */ (function (_super) {
                __extends(TestComponent, _super);
                function TestComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TestComponent = __decorate([
                    decorator_1.ServerError
                ], TestComponent);
                return TestComponent;
            }(util_1.MockClassComponent));
            expect(component_1.PureRouter.serverError).toEqual(react_1.default.createElement(TestComponent, null));
        });
    });
});
//# sourceMappingURL=decorator.spec.js.map